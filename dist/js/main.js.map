{"version":3,"sources":["main.js"],"names":["menuHandler","window","innerWidth","navLinks","document","querySelectorAll","dropdownMenus","burgerMenu","querySelector","navbar","addEventListener","classList","toggle","contains","forEach","menu","remove","link","parentNode","dropdownMenu","nextElementSibling","tabsHandler","filterLink","filterTab","links","tabs","currentLink","className","replace","add","linkId","getAttribute","tab","style","display","animate","opacity","duration","rosterTabsHandler","filter","current"],"mappings":";AAAA,IAAMA,EAAc,WAChB,KAAIC,OAAOC,WAAa,KAAxB,CAEA,IAAMC,EAAWC,SAASC,iBAAiB,aACrCC,EAAgBF,SAASC,iBAAiB,kBAC1CE,EAAaH,SAASI,cAAc,gBACpCC,EAASL,SAASI,cAAc,WAEtCD,EAAWG,iBAAiB,QAAS,WACjCH,EAAWI,UAAUC,OAAO,QAC5BH,EAAOE,UAAUC,OAAO,QAEnBH,EAAOE,UAAUE,SAAS,SAC3BP,EAAcQ,QAAQ,SAACC,GACfA,EAAKJ,UAAUE,SAAS,SACxBE,EAAKJ,UAAUK,OAAO,YAMtCb,EAASW,QAAQ,SAACG,GACdA,EAAKP,iBAAiB,QAAS,WAE3BJ,EAAcQ,QAAQ,SAACC,GACfE,EAAKC,YAAcH,EAAKG,YACxBH,EAAKJ,UAAUK,OAAO,UAK9B,IAAMG,EAAeF,EAAKG,mBAEtBD,GACAA,EAAaR,UAAUC,OAAO,cAM9CZ,IAEA,IAAMqB,EAAc,SAACC,EAAYC,GAC7B,IAAMC,EAAQpB,SAASC,iBAAiBiB,GAClCG,EAAOrB,SAASC,iBAAiBkB,GAEvCC,EAAMV,QAAQ,SAACG,GACXA,EAAKP,iBAAiB,QAAS,WAC3B,IAAIgB,EAActB,SAASI,cAAiBc,GAAAA,OAAAA,EAA5C,YACAI,EAAYC,UAAYD,EAAYC,UAAUC,QAAQ,SAAU,IAChE,KAAKjB,UAAUkB,IAAI,UAEnBC,OAASb,EAAKc,aAAa,WAE3BN,EAAKX,QAAQ,SAACkB,GACNA,EAAID,aAAa,OAASD,QAC1BE,EAAIC,MAAMC,QAAU,QACpBF,EAAIG,QAAQ,CAAC,CAAEC,QAAS,KAAO,CAAEA,QAAS,MAAQ,CAC9CC,SAAU,OAGdL,EAAIC,MAAMC,QAAU,cAOxCb,EAAY,oBAAqB,eAEjC,IAAMiB,EAAoB,SAAChB,EAAYC,GACnC,IAAMC,EAAQpB,SAASC,iBAAiBiB,GAClCG,EAAOrB,SAASC,iBAAiBkB,GAEdnB,SAASI,cAAiBc,GAAAA,OAAAA,EAAnD,oBACiBX,UAAUkB,IAAI,UAE/BL,EAAMV,QAAQ,SAACyB,GACXA,EAAO7B,iBAAiB,QAAS,WAC7B,IAAMoB,EAASS,EAAOR,aAAa,WAE/BS,EAAUpC,SAASI,cAAiBc,GAAAA,OAAAA,EAAxC,YACAkB,EAAQb,UAAYa,EAAQb,UAAUC,QAAQ,UAAW,IACzD,KAAKjB,UAAUkB,IAAI,UAEnBJ,EAAKX,QAAQ,SAACkB,GACNA,EAAID,aAAa,OAASD,GAAqB,QAAXA,GACpCE,EAAIC,MAAMC,QAAU,QACpBF,EAAIG,QAAQ,CAAC,CAAEC,QAAS,KAAO,CAAEA,QAAS,MAAQ,CAC9CC,SAAU,OAGdL,EAAIC,MAAMC,QAAU,cAOxCI,EAAkB,iBAAkB","file":"main.js","sourceRoot":"..\\..\\src\\js","sourcesContent":["const menuHandler = () => {\r\n    if (window.innerWidth > 992) return;\r\n\r\n    const navLinks = document.querySelectorAll('.nav-link');\r\n    const dropdownMenus = document.querySelectorAll('.dropdown-menu');\r\n    const burgerMenu = document.querySelector('.burger-menu');\r\n    const navbar = document.querySelector('.navbar');\r\n\r\n    burgerMenu.addEventListener('click', () => {\r\n        burgerMenu.classList.toggle('open');\r\n        navbar.classList.toggle('open');\r\n\r\n        if (!navbar.classList.contains('open')) {\r\n            dropdownMenus.forEach((menu) => {\r\n                if (menu.classList.contains('open')) {\r\n                    menu.classList.remove('open');\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    navLinks.forEach((link) => {\r\n        link.addEventListener('click', () => {\r\n            // remove open className\r\n            dropdownMenus.forEach((menu) => {\r\n                if (link.parentNode != menu.parentNode) {\r\n                    menu.classList.remove('open');\r\n                }\r\n            });\r\n\r\n            // add open className to current dropdown\r\n            const dropdownMenu = link.nextElementSibling;\r\n\r\n            if (dropdownMenu) {\r\n                dropdownMenu.classList.toggle('open');\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\nmenuHandler();\r\n\r\nconst tabsHandler = (filterLink, filterTab) => {\r\n    const links = document.querySelectorAll(filterLink);\r\n    const tabs = document.querySelectorAll(filterTab);\r\n\r\n    links.forEach((link) => {\r\n        link.addEventListener('click', function () {\r\n            let currentLink = document.querySelector(`${filterLink}.active`);\r\n            currentLink.className = currentLink.className.replace('active', '');\r\n            this.classList.add('active');\r\n\r\n            linkId = link.getAttribute('data-id');\r\n\r\n            tabs.forEach((tab) => {\r\n                if (tab.getAttribute('id') == linkId) {\r\n                    tab.style.display = 'block';\r\n                    tab.animate([{ opacity: '0' }, { opacity: '1' }], {\r\n                        duration: 400,\r\n                    });\r\n                } else {\r\n                    tab.style.display = 'none';\r\n                }\r\n            });\r\n        });\r\n    });\r\n};\r\n\r\ntabsHandler('.roster-type-link', '.roster-tab');\r\n\r\nconst rosterTabsHandler = (filterLink, filterTab) => {\r\n    const links = document.querySelectorAll(filterLink);\r\n    const tabs = document.querySelectorAll(filterTab);\r\n\r\n    const allPositionsLink = document.querySelector(`${filterLink}[data-id='all']`);\r\n    allPositionsLink.classList.add('active');\r\n\r\n    links.forEach((filter) => {\r\n        filter.addEventListener('click', function () {\r\n            const linkId = filter.getAttribute('data-id');\r\n\r\n            let current = document.querySelector(`${filterLink}.active`);\r\n            current.className = current.className.replace(' active', '');\r\n            this.classList.add('active');\r\n\r\n            tabs.forEach((tab) => {\r\n                if (tab.getAttribute('id') == linkId || linkId === 'all') {\r\n                    tab.style.display = 'block';\r\n                    tab.animate([{ opacity: '0' }, { opacity: '1' }], {\r\n                        duration: 400,\r\n                    });\r\n                } else {\r\n                    tab.style.display = 'none';\r\n                }\r\n            });\r\n        });\r\n    });\r\n};\r\n\r\nrosterTabsHandler('.position-link', '.roster-position');\r\n"]}